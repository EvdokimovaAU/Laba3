name: Test and Build Project

on: 
  workflow_dispatch:
  push:
  
jobs:
  testProject:
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - playmode
          - editmode

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          
      - name: Verify project structure
        run: |
          ls -la "Our project/ProjectSettings"
          if [ ! -f "Our project/ProjectSettings/ProjectVersion.txt" ]; then
            echo "::error::ProjectVersion.txt not found at Our project/ProjectSettings/"
            exit 1
          fi

      - uses: actions/cache@v4
        with:
          path: Our project/Library
          key: Library-${{ hashFiles('Our project/ProjectSettings/ProjectVersion.txt') }}
          restore-keys: |
            Library-
            
      - uses: game-ci/unity-test-runner@v4
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: "Our project"  # Корневая папка Unity проекта
          testMode: ${{ matrix.testMode }}
          artifactsPath: "test-results/${{ matrix.testMode }}"
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: "Test results - ${{ matrix.testMode }}"
          path: "test-results/${{ matrix.testMode }}"

  buildForAllDesiredPlatforms:
    needs: testProject
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:        
          - StandaloneWindows64
          - StandaloneLinux64
          - Android

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
          
      - uses: actions/cache@v4
        with:
          path: Our project/Library
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('Our project/ProjectSettings/ProjectVersion.txt') }}
          restore-keys: |
            Library-
            
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: "Our project"
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: "${{ matrix.targetPlatform }}"
          buildsPath: "build"
          
      - uses: actions/upload-artifact@v4
        with:
          name: "Build - ${{ matrix.targetPlatform }}"
          path: "build/${{ matrix.targetPlatform }}"
