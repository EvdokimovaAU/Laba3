name: Test and Build Project

on: 
  workflow_dispatch:
  push:
  
env:
  UNITY_PROJECT_PATH: 'Laba3/Our project'  # Путь с пробелом

jobs:
  testProject:
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - playmode
          - editmode

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          path: '${{ env.UNITY_PROJECT_PATH }}'  # Заключаем путь в кавычки
      
      - name: Verify project structure
        run: |
          ls -la "${{ env.UNITY_PROJECT_PATH }}"  # Кавычки вокруг пути
          ls -la "${{ env.UNITY_PROJECT_PATH }}/Assets"
          ls -la "${{ env.UNITY_PROJECT_PATH }}/ProjectSettings"
          test -f "${{ env.UNITY_PROJECT_PATH }}/ProjectSettings/ProjectVersion.txt" || exit 1
      
      - uses: actions/cache@v4
        with:
          path: '${{ env.UNITY_PROJECT_PATH }}/Library'  # Кавычки вокруг пути
          key: Library-${{ hashFiles('${{ env.UNITY_PROJECT_PATH }}/ProjectSettings/ProjectVersion.txt') }}
          restore-keys: |
            Library-

      - uses: game-ci/unity-test-runner@v4
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: '${{ env.UNITY_PROJECT_PATH }}'  # Кавычки вокруг пути
          testMode: ${{ matrix.testMode }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TestResults-${{ matrix.testMode }}
          path: '${{ env.UNITY_PROJECT_PATH }}/TestResults'  # Кавычки вокруг пути

  buildForAllDesiredPlatforms:
    needs: testProject
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:		
          - StandaloneWindows64
          - StandaloneLinux64 
          - Android

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
          path: '${{ env.UNITY_PROJECT_PATH }}'  # Кавычки вокруг пути
      
      - name: Verify project files exist
        run: test -f "${{ env.UNITY_PROJECT_PATH }}/ProjectSettings/ProjectVersion.txt" || exit 1
      
      - uses: actions/cache@v4
        with:
          path: '${{ env.UNITY_PROJECT_PATH }}/Library'  # Кавычки вокруг пути
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('${{ env.UNITY_PROJECT_PATH }}/ProjectSettings/ProjectVersion.txt') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
            Library-

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          projectPath: '${{ env.UNITY_PROJECT_PATH }}'  # Кавычки вокруг пути
          buildName: ${{ matrix.targetPlatform }}
          buildsPath: build
      
      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
